{"version":3,"file":"static/js/609.88244354.chunk.js","mappings":"kMACA,EAAuB,wB,SCkBvB,EAhBkB,SAACA,GACjB,OACE,gBAAIC,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAO,CAACH,UAAU,MAAMI,GAAIL,EAAMM,GAAG,SAAC,sBAK7C,EChBA,EAAuB,wBAAvB,EAAyD,2B,SCwCzD,EArCkB,SAACN,GACjB,IAAMO,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,EAAWX,EAAXW,OAEFC,EADc,IAAIC,gBAAgBJ,EAASK,QAChBC,IAAI,QAWrC,OACE,UAAC,EAAAC,SAAQ,YACP,gBAAKf,UAAWC,EAAgB,UAC9B,oBAAQe,QAZM,WAClBV,EAAS,SAAD,OAA2B,QAAjBK,EAAyB,OAAS,QAC/B,QAAjBA,EACFD,EAAOO,MAAK,SAACC,EAAQC,GAAM,OAAMD,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAAC,IAE/DK,EAAOO,MAAK,SAACC,EAAQC,GAAM,OAAMD,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAAC,GAEnE,EAKmC,UAAC,QACL,QAAjBM,EAAyB,aAAe,kBAGlD,eAAIX,UAAWC,EAAa,SACzBF,EAAMW,OAAOU,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERhB,GAAIgB,EAAMhB,GACVF,OAAQkB,EAAMlB,OACdD,KAAMmB,EAAMnB,MAHPmB,EAAMhB,GAIX,QAKZ,E,2BCtCA,EAA2B,gCCa3B,EAXsB,WACpB,OACE,iBAAKL,UAAWC,EAAiB,WAC/B,uBAAG,sBACH,SAAC,KAAI,CAACG,GAAG,aAAaJ,UAAU,MAAK,SAAC,kBAK5C,ECqBA,EA1Be,WACb,OAKIsB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAJxBC,EAAW,EAAXA,YACAC,EAAM,EAANA,OACMf,EAAM,EAAZgB,KACAC,EAAK,EAALA,MAKF,OAHAC,EAAAA,EAAAA,YAAU,WACRJ,GACF,GAAG,CAACA,IACW,YAAXC,GAEA,gBAAKzB,UAAU,WAAU,UACvB,SAAC6B,EAAA,EAAc,MAIjBF,GACK,cAAG3B,UAAU,mBAAkB,SAAE2B,IAE3B,cAAXF,GAA4Bf,GAA4B,IAAlBA,EAAOoB,QAG1C,SAAC,EAAS,CAACpB,OAAQA,KAFjB,SAAC,EAAa,GAGzB,C","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/Quotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__zfg04\"};","import { NavLink } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <NavLink className=\"btn\" to={props.id}>\n        View Fullscreen\n      </NavLink>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__ie4kp\",\"sorting\":\"QuoteList_sorting__ItSgN\"};","import { Fragment } from \"react\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { quotes } = props;\n  const queryParams = new URLSearchParams(location.search);\n  const sortingOrder = queryParams.get(\"sort\");\n\n  const changeOrder = () => {\n    navigate(`?sort=${sortingOrder === \"asc\" ? \"desc\" : \"asc\"}`);\n    if (sortingOrder === \"asc\") {\n      quotes.sort((quoteX, quoteY) => (quoteX.id > quoteY.id ? 1 : -1));\n    } else {\n      quotes.sort((quoteX, quoteY) => (quoteX.id < quoteY.id ? 1 : -1));\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeOrder}>\n          Sort {sortingOrder === \"asc\" ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__nIyqo\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { getAllQuotes } from \"../components/lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst Quotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: quotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (status === \"completed\" && (!quotes || quotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  return <QuoteList quotes={quotes} />;\r\n};\r\n\r\nexport default Quotes;\r\n"],"names":["props","className","classes","text","author","to","id","navigate","useNavigate","location","useLocation","quotes","sortingOrder","URLSearchParams","search","get","Fragment","onClick","sort","quoteX","quoteY","map","quote","useHttp","getAllQuotes","sendRequest","status","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}